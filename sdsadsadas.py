#Для каждой задачи некоторые выводы на экран закомментированы. Обратите на это внимание
'''Автомат обрабатывает натуральное число N по следующему алгоритму:
Строится двоичная запись числа N.
К полученной записи дописываются разряды по следующему принципу: если число чётное, то справа дописывается 10,
 если нечётное – слева дописывается 1 и справа 00.
Результат переводится в десятичную систему и выводится на экран.
В результате работы автомата на экране появилось число, большее 107.
Для какого наименьшего N данная ситуация возможна?
В ответе найденное число N запишите в десятичной системе.'''
sp = []
for n in range(1, 999):
    n_bin = bin(n)[2:]
    if n % 2 == 0:
        n_bin_new = n_bin + '10'
    else:
        n_bin_new = '1' + n_bin + '00'
    res = int(n_bin_new, 2)
    if res > 107:
        sp.append(n)
#print(min(sp))
'''Для хранения произвольного растрового изображения размером 1024 на 280 пикселей отведено 280 Кбайт памяти без учёта размера 
заголовка файла. Для кодирования цвета каждого пикселя используется одинаковое количество бит, также используется 3 бит для определения
 степени прозрачности. Коды пикселей записываются в файл один за другим без промежутков.
Какое максимальное количество цветов (без учёта степени прозрачности) можно использовать в изображении?'''
P = 1024 * 280
I = 280 * 1024 * 8  # бит
#i = iцв + iстепень_прозрачн
i = I / P  # выводим на экран, определили, что i = 8
#следовательно
#iцв = 8 - 3 = 5
N = 2 ** 5
#print(N)
'''Определите количество трёхзначных чисел, записанных в шестеричной системе счисления, 
в записи которых не менее двух цифр 5.'''
alph = '012345'
cnt = 0
for d1 in '12345':
    for d2 in alph:
        for d3 in alph:
            num = d1 + d2 + d3
            if num.count('5') >= 2:
                cnt += 1
#print(cnt)
'''При регистрации в компьютерной системе каждому объекту присваивается идентификатор, состоящий из 270 символов. 
Идентификатор может содержать десятичные цифры и символы из 1300-символьного набора специальных символов. 
В базе данных для хранения сведений о каждом идентификаторе отведено одинаковое и минимально возможное целое число байт.
 При этом используют посимвольное кодирование идентификаторов, все символы кодируются одинаковым и минимально
  возможным количеством бит.Определите максимально возможное количество пользователей, если максимальный объём,
   необходимый для хранения идентификаторов, равен 290 Кбайт.'''
k = 270
N = 10 + 1300
# определяем i
#print(2 ** 11)
i = 11
I = k * i  # бит
# сказано,что идентификатор весит в байтах, значит
I = I / 8
#print(I) Видим, что 371.25 байт, следовательно
I = 372  # байта
V = 290 * 1024  # байта
n = V / I
#print(n) 798.2795698924731
#значит, что можно записать только 798 человек
#print(V // I)  # или сразу так
'''Дана программа для исполнителя Редактор:

НАЧАЛО
ПОКА нашлось (35) ИЛИ нашлось (355) ИЛИ нашлось (3444)
    ЕСЛИ нашлось (35)
    ТО заменить (35, 4)
    ИНАЧЕ
        ЕСЛИ нашлось (355)
        ТО заменить (355, 4)
        ИНАЧЕ заменить (3444, 3)
        КОНЕЦ ЕСЛИ
    КОНЕЦ ЕСЛИ
КОНЕЦ ПОКА
КОНЕЦ
Какая строка получится в результате применения приведённой выше программы к строке вида
 3…34…4 (6 цифр «3», затем 75 цифр «4»)? В ответе запишите полученную строку.'''
s = '3' * 6 + '4' * 75
while '35' in s or '355' in s or '3444' in s:
    if '35' in s:
        s = s.replace('35', '4', 1)
    else:
        if '355' in s:
            s = s.replace('355', '4', 1)
        else:
            s = s.replace('3444', '3', 1)
#print(s)
'''Операнды арифметического выражения записаны в системе счисления с основанием 12.
154x312 + 1x36512
В записи чисел переменной x обозначена неизвестная цифра из алфавита двенадцатеричной системы счисления.
Определите значение x, при котором значение данного арифметического выражения кратно 13. Для найденного значения x вычислите 
частное от деления значения арифметического выражения на 13 и укажите его в ответе в десятичной системе счисления.
Основание системы счисления в ответе указывать не нужно.'''
alph = '0123456789AB'
for x in alph:
    left = int('154' + x + '3', 12)
    right = int('1' + x + '365', 12)
    res = left + right
    if res % 13 == 0:
        #print(res // 13)
        pass  # При выводе на экзан, эту строчку удаляем, строку выше раскомментируем
# Если результатов будет несколько, то выбираем исходя из условия задачи. Если для наибольшего x, то максимальное из значений
#Для конкретной задачи сказано просто определить такой x и он действительно один
'''В файле 12.txt содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения
 от –100 000 до 100 000 включительно. Пусть N – минимальное число в последовательности, НЕ кратное 15.
Определите количество пар элементов последовательности, в которых оба числа кратны N.
В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
В данной задаче под парой подразумевается два идущих подряд элемента последовательности.'''
file = open('12.txt')  # файл копируем в папку проекта
sp = [int(line) for line in file]
res = []
min_n_ne15 = 100_000 # для поиска минимального берем максимальное значение
for num in sp:
    if num % 15 != 0:
        min_n_ne15 = min(min_n_ne15, num)
#Теперь в переменной минимальное число, не кратное 15. Ее и будем использовать
for i in range(len(sp) - 1):
    if sp[i] % min_n_ne15 == 0 and sp[i + 1] % min_n_ne15 == 0:
        res.append(sp[i] + sp[i + 1])  # читайте внимательно, что нужно найти, это в список и добавляем. Обычно сумма элементов
#print(len(res), max(res))
#Выше вывод количества сумм, т.е. количество пар, подходлящих по условию задачи, а так же максимальной суммы таких пар
'''В файле электронной таблицы 8.xls (8.ods, 8.xlsx, 8.csv) в каждой строке содержатся четыре натуральных числа.
Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:
– наибольшее из четырёх чисел больше суммы трёх других;
– все четыре числа различны.'''
# Скачиваем файл 8.csv, переносим в папку проекта
file = open('8.csv')
sp = [[int(num) for num in line.split(';')] for line in file]
cnt = 0
for mini_sp in sp:
    if max(mini_sp) > sum(mini_sp) - max(mini_sp):  # Проверка первого условия
        if len(set(mini_sp)) == 4:  # Все 4 различны
            cnt += 1
#print(cnt)  # выводим количество строк, подходящих по условию задачи






